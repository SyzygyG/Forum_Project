@model IEnumerable<QCUForum.Models.Thread>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}


@{
    ViewBag.Title = "Threads";
    int currentPage = ViewBag.Page;
    int categoryId = ViewBag.CategoryId;

    // Fetch the category name from the database
    string categoryName = "";
    using (var connection = QCUForum.Helpers.DatabaseHelper.GetConnection())
    {
        connection.Open();
        var query = "SELECT name FROM Categories WHERE id = @categoryId";
        using (var command = new MySql.Data.MySqlClient.MySqlCommand(query, connection))
        {
            command.Parameters.AddWithValue("@categoryId", categoryId);
            categoryName = command.ExecuteScalar()?.ToString() ?? "Unknown Category";
        }
    }
}

<div class="container py-4">
    <h1 class="text-center mb-4 text-bg-dark p-3 rounded">
        Threads in <span class="text-info">@categoryName</span>
    </h1>
    <a href="@Url.Action("Index", "Categories")" class="btn btn-secondary mb-3">Back to Categories</a>

    <!-- Row for Create Thread and Reminder -->
    <div class="row mb-4">
        <!-- Create New Thread -->
        <div class="col-md-6">
            <h2>Create New Thread</h2>
            @using (Html.BeginForm("Create", "Threads", FormMethod.Post))
            {
                <div class="mb-3">
                    <label for="title" class="form-label">Thread Title</label>
                    <input type="text" name="Title" id="title" class="form-control" style="min-width:500px;"required />
                    <input type="hidden" name="CategoryId" value="@categoryId" />
                </div>
                <button type="submit" class="btn btn-primary">Create</button>
            }
        </div>

        <!-- Reminder -->
        <div class="col-md-6">
            <div class="card text-bg-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Reminder</h5>
                    <ul class="list-unstyled">
                        <li>1. Be respectful and constructive in discussions.</li>
                        <li>2. No hateful, abusive, or offensive language.</li>
                        <li>3. Avoid sharing personal or identifiable information.</li>
                        <li>4. Posts that incite violence, discrimination, or harm will be removed.</li>
                        <li>5. Misuse of anonymity is strictly prohibited.</li>
                        <li>6. Use the Report button to flag inappropriate content for admin review.</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Threads List -->
    <ul class="list-group mb-4">
        @foreach (var thread in Model)
        {
            <li class="list-group-item list-group-item-action">
                <a href="@Url.Action("Index", "Posts", new { threadId = thread.Id })" class="text-decoration-none">
                    <h5>@thread.Title</h5>
                </a>
                <small class="text-muted">Created on: @thread.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</small>
            </li>
        }
    </ul>

    <!-- Pagination -->
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Threads", new { categoryId = categoryId, page = currentPage - 1 })">&laquo; Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Threads", new { categoryId = categoryId, page = currentPage + 1 })">Next &raquo;</a>
            </li>
        </ul>
    </nav>
</div>
