@model IEnumerable<QCUForum.Models.Post>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}


@{
    ViewBag.Title = "Posts";
    int currentPage = ViewBag.Page;
    int threadId = ViewBag.ThreadId;

    // Fetch the thread name and category name from the database
    string threadName = "";
    string categoryName = "";
    using (var connection = QCUForum.Helpers.DatabaseHelper.GetConnection())
    {
        connection.Open();

        // Fetch the thread name and category ID
        int categoryId = 0;
        var threadQuery = "SELECT title, category_id FROM Threads WHERE id = @threadId";
        using (var threadCommand = new MySql.Data.MySqlClient.MySqlCommand(threadQuery, connection))
        {
            threadCommand.Parameters.AddWithValue("@threadId", threadId);
            using (var reader = threadCommand.ExecuteReader())
            {
                if (reader.Read())
                {
                    threadName = reader.GetString("title");
                    categoryId = reader.GetInt32("category_id");
                }
            }
        }

        // Fetch the category name based on the category ID
        if (categoryId > 0)
        {
            var categoryQuery = "SELECT name FROM Categories WHERE id = @categoryId";
            using (var categoryCommand = new MySql.Data.MySqlClient.MySqlCommand(categoryQuery, connection))
            {
                categoryCommand.Parameters.AddWithValue("@categoryId", categoryId);
                categoryName = categoryCommand.ExecuteScalar()?.ToString() ?? "Unknown Category";
            }
        }
    }
}

<div class="container py-4">
    <h1 class="text-center mb-4 text-bg-dark p-3 rounded">
        Posts in <span class="text-info">@threadName</span>
    </h1>
    <h2 class="text-center mb-4 text-bg-dark">
        Under Category: <span class="text-primary">@categoryName</span>
    </h2>
    <a href="@Url.Action("Index", "Threads", new { categoryId = ViewBag.CategoryId })" class="btn btn-secondary mb-3">Back to Threads</a>

    <!-- Row for Create Post and Reminder -->
    <div class="row mb-4">
        <!-- Add New Post -->
        <div class="col-md-6">
            <h2>Add a New Post</h2>
            @using (Html.BeginForm("Create", "Posts", FormMethod.Post))
            {
                <div class="mb-3">
                    <label for="content" class="form-label">Your Post</label>
                    <textarea name="Content" id="content" rows="4" class="form-control" style="min-width:500px;" required></textarea>
                    <input type="hidden" name="ThreadId" value="@threadId" />
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            }
        </div>

    <!-- Reminder -->
        <div class="col-md-6">
            <div class="card text-bg-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Reminder</h5>
                    <ul class="list-unstyled">
                        <li>1. Be respectful and constructive in discussions.</li>
                        <li>2. No hateful, abusive, or offensive language.</li>
                        <li>3. Avoid sharing personal or identifiable information.</li>
                        <li>4. Posts that incite violence, discrimination, or harm will be removed.</li>
                        <li>5. Misuse of anonymity is strictly prohibited.</li>
                        <li>6. Use the Report button to flag inappropriate content for admin review.</li>
                    </ul>
                </div>
            </div>
        </div> 
    </div>

    <!-- Posts List -->
    <ul class="list-group mb-4">
        @foreach (var post in Model)
        {
            <li class="list-group-item">
                <p>@post.Content</p>
                <small class="text-muted">Posted on: @post.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</small>
            </li>
        }
    </ul>

    <!-- Pagination -->
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Posts", new { threadId = threadId, page = currentPage - 1 })">&laquo; Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Posts", new { threadId = threadId, page = currentPage + 1 })">Next &raquo;</a>
            </li>
        </ul>
    </nav>
</div>